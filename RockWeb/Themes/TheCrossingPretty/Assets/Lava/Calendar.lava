 {% comment %} Add Vue and Vuetify CDN {% endcomment %}
<!-- <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12"></script> -->
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js"></script>
<link
  href="https://cdn.jsdelivr.net/npm/@mdi/font@4.x/css/materialdesignicons.min.css"
  rel="stylesheet"
/>
<link
  href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css"
  rel="stylesheet"
/>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"
  integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ=="
  crossorigin="anonymous"
></script>


<div id="app" style="width: 100%">
  <v-app>
    <div>
      <v-row class='background--grey' style="margin: 0px;">
        <v-col cols="12" md="3">
          <v-menu
            ref="menu"
            v-model="menu"
            :close-on-content-click="false"
            transition="scale-transition"
            offset-y
            attach
            max-width="290px"
            min-width="auto"
          >
            <template v-slot:activator="{ on, attrs }">
              <v-text-field
                v-model="date"
                label="EVENTS IN"
                readonly
                v-bind="attrs"
                v-on="on"
              ></v-text-field>
            </template>
            <v-date-picker
              v-model="date"
              no-title
              type="month"
              @input="menu = false"
            >
            </v-date-picker>
          </v-menu>
        </v-col>
        <v-col cols="12" md="6">
          <v-text-field
            label="SEARCH"
            v-model="search"
          ></v-text-field>
        </v-col>
        <v-col cols="12" md="3" style="display: flex; justify-content: center; align-items: center;">
          <v-btn color="#666" class="text-white" @click="loadDates(date)">FIND EVENTS</v-btn>
        </v-col>
      </v-row>
      <v-row>
        <v-col></v-col>
      </v-row>
      <v-calendar
        ref="calendar"
        v-model="focus"
        color="primary"
        :events="events"
        type="month"
        @click:event="openEvent"
        width="100%"
      >
        <template v-slot:event="{event}">
          {% raw %}<strong @mouseover="showEvent(event)" @mouseleave="hideEvent" @click="openEvent(event)">{{event.name}}</strong>{% endraw %}
        </template> 
      </v-calendar>
      <div class='d-none d-md-block' style="position: relative;">
        <v-dialog
          max-width="350px"
          v-model="popover"
        >
          <v-card
            color="grey lighten-4"
            min-width="350px"
            absolute
            top
          >
            <v-card-text>
              <span style="font-size: 14px; font-weight: bold;" v-html="selectedEvent.name"></span><br/>
              <span v-html="selectedEvent.time"></span>
              <v-row>
                <v-col cols="6">
                    <v-img max-width="150px" :src="selectedEvent.photo"/>
                </v-col>
                <v-col cols="6">
                    <div id="summary" v-html="summary(selectedEvent.description)"></div>
                </v-col>
              </v-row>
            </v-card-text>
          </v-card>
        </v-dialog>
      </div>
      <div class='d-block d-md-none' v-if="focus">
        <h4 v-if="focusEvents.length > 0">Events for {% raw %}{{ focus | longDate }}{% endraw %}</h4>
        <h5 v-else style='text-align: center;'>There are no events on {% raw %}{{ focus | longDate }}{% endraw %}</h5>
        <v-row v-for="(e, idx) in focusEvents" :key="idx">
          <v-col>
            <v-card>
              <v-card-text>
                {% raw %}
                  <strong>{{e.name}}</strong>
                  <v-row>
                    <v-col cols="6">
                      <v-img :src="e.photo" />
                    </v-col>
                    <v-col cols="6" v-html="e.time">
                    </v-col>
                  </v-row>
                  <v-row>
                    <v-col id="mobile-summary" v-html="summary(e.description)">
                    </v-col>
                  </v-row>
                  <a :href="e.link">More Details</a>
                {% endraw %}
              </v-card-text>
            </v-card>
          </v-col>
        </v-row>
      </div>
    </div>
  </v-app>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        new Vue({
            el: "#app",
            vuetify: new Vuetify({
                theme: {
                    themes: {
                        light: {
                            primary: "#347689",
                            secondary: "#3D3D3D",
                            accent: "#8ED2C9",
                        },
                    },
                },
                iconfont: "mdi",
            }),
            config: {
                devtools: true,
            },
            data: {
                events: [],
                focus: '',
                menu: false,
                selectedEvent: {},
                selectedElement: null,
                date: '',
                search: '',
                popover: false,
            },
            created() {
                this.loadEvents()
                this.date = moment().format('YYYY-MM')
                let query = new URLSearchParams(window.location.search);
                let sd = query.get("Start");
                let s = query.get("Search")
                if(sd) {
                  this.focus = sd
                  this.date = moment(sd).format('YYYY-MM')
                }
                if(s) {
                  this.search = s
                }
            },
            mounted() {
            },
            computed: {
                focusEvents() {
                  return this.events.filter(e => {
                    return moment(e.start).format('YYYY-MM-DD') == this.focus
                  })
                }
            },
            methods: {
                loadEvents(){
                    let events = []
                    {% for eventItemOccurrence in EventItemOccurrences %}
                    events.push({
                        name: '{{ eventItemOccurrence.Name }}',
                        start: moment("{{ eventItemOccurrence.Date | Date: 'yyyy-MM-dd' }} {{ eventItemOccurrence.Time }}", 'YYYY-MM-DD hh:mm a').format('YYYY-MM-DDTHH:mm'),
                        end: moment("{{ eventItemOccurrence.Date | Date: 'yyyy-MM-dd' }} {{ eventItemOccurrence.EndTime }}", 'YYYY-MM-DD hh:mm a').format('YYYY-MM-DDTHH:mm'),
                        link: '{{ DetailsPage }}?EventOccurrenceId={{ eventItemOccurrence.EventItemOccurrence.Id }}',
                        photo: '{{ eventItemOccurrence.PhotoPath }}',
                        description: `{{ eventItemOccurrence.Description }}`,
                        time: "{{ eventItemOccurrence.Date | Date: 'MMMM d' }} {{ eventItemOccurrence.Time }} - {{ eventItemOccurrence.EndTime }}",
                    })
                    {% endfor %}
                    this.events = events
                },
                showEvent(e){
                  this.selectedEvent= e
                  this.popover = true
                },
                hideEvent(){
                  this.popover = false
                  this.selectedEvent = {}
                },
                openEvent(event){
                  window.open(event.link,"_self")
                },
                summary(str){
                    if(str) {
                        return str.substring(0, 200) + '...'
                    }
                    return ''
                },
                loadDates(dt) {
                  if(dt.length < 10) {
                    dt += '-01'
                  }
                  let params = "Start=" + dt
                  if(this.search) {
                    params += "&Search=" + this.search
                  }
                  document.location.search = params
                }
            },
            filters: {
              longDate(val) {
                return moment(val).format('MMMM D')
              }
            },
            watch: {
                focus(val) {
                  let query = new URLSearchParams(window.location.search);
                  let sd = query.get("Start");
                  if(!sd || sd.substring(0,7) != val.substring(0,7)){
                    this.loadDates(val)
                  }
                }
            }
        });
    });
</script>
<style>
#summary p, #mobile-summary p {
  font-size: 12px !important;
}
.v-application--wrap {
  height: fit-content;
}
.container {
    padding: 0px 15px;
}
</style>